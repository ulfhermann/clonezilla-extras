#!/bin/bash
# Author: Steven Shiau <steven _at_ nchc org tw>
# License: GPL

# When this script is ready, you can run
# ocs-iso -g en_US.UTF-8 -k NONE -s -m ./custom-ocs
# to create the iso file for CD/DVD. or
# ocs-live-dev -g en_US.UTF-8 -k NONE -s -c -m ./custom-ocs
# to create the zip file for USB flash drive.

# Begin of the scripts:
# Load DRBL setting and functions
DRBL_SCRIPT_PATH="${DRBL_SCRIPT_PATH:-/usr/share/drbl}"

. $DRBL_SCRIPT_PATH/sbin/drbl-conf-functions
. /etc/drbl/drbl-ocs.conf
. $DRBL_SCRIPT_PATH/sbin/ocs-functions

# load the setting for clonezilla live.
[ -e /etc/ocs/ocs-live.conf ] && . /etc/ocs/ocs-live.conf

# The above is almost necessary, it is recommended to include them in your own custom-ocs.
# From here, you can write your own scripts.

# Get the live media mount point.
get_live_media_mnt_point

# functions

choose_mode() {
  local TMP ocslivemode
  TMP="$(mktemp /tmp/ocslivemode.XXXXXX)"

  trap "[ -f "$TMP" ] && rm -f $TMP" HUP INT QUIT TERM EXIT
  $DIA --backtitle "$msg_nchc_free_software_labs" --title  \
  "$msg_start_clonezilla" --menu "$msg_start_clonezilla_or_enter_shell\n$msg_choose_mode:" \
  0 0 0 $DIA_ESC \
  "Start_Clonezilla_Live" "$msg_start_clonezilla_live" \
  "Start_Clonezilla_SE" "$msg_start_clonezilla_se" \
  "Enter_shell"      "$msg_enter_cml" \
  2> $TMP
  ocslivemode="$(cat $TMP)"
  echo "ocslivemode is $ocslivemode"
  [ -f "$TMP" ] && rm -f $TMP
  
  case "$ocslivemode" in
    "Start_Clonezilla_Live") 
      echo "Starting Clonezilla Live now..." ;;
    "Start_Clonezilla_SE") 
      echo "Starting Clonezilla SE in chrootnow..."
      /mnt/drblmount
      exit 1;;
    "Enter_shell") exit 1 ;;
  esac
} # end of choose_mode


choose_save_restore() {
  local TMP
  TMP="$(mktemp /tmp/ocssaverestore.XXXXXX)"

  echo "Choose the mode for ocs-sr"
  ASK_OCS_SR_TYPE=1
  while [ "$ASK_OCS_SR_TYPE" -ne 0 ]; do
    $DIA --backtitle "$msg_nchc_free_software_labs" --title  \
    "Clonezilla: $msg_choose_mode" --menu "$msg_clonezilla_is_free_and_no_warranty\n$msg_overwrite_data_on_disk_when_restoring\n$msg_hint_multiple_choice_select_by_space\n$msg_choose_mode:" \
    0 0 0 \
    "savedisk" "save_local_disk_as_image" \
    "1-2-mdisks" "restore_image_to_local_disks" \
    2> $TMP
    ocs_sr_type="$(cat $TMP)"
    if [ -z "$ocs_sr_type" ]; then
      ASK_OCS_SR_TYPE=1
    else
      ASK_OCS_SR_TYPE=0
    fi
  done
  [ -f "$TMP" ] && rm -f $TMP
  [ -z "$ocs_sr_type" ] && echo "You must specify the action! Program terminated!!!" && exit 1
}

prepare() {
  # set the flag to show color output
  BOOTUP=color
  # some parameters for color output.
  [ -z "$SETCOLOR_SUCCESS" ] && SETCOLOR_SUCCESS="echo -en \\033[1;32m"
  [ -z "$SETCOLOR_FAILURE" ] && SETCOLOR_FAILURE="echo -en \\033[1;31m"
  [ -z "$SETCOLOR_WARNING" ] && SETCOLOR_WARNING="echo -en \\033[1;33m"
  [ -z "$SETCOLOR_NORMAL"  ] && SETCOLOR_NORMAL="echo -en \\033[0;39m"
  
  # Clean /etc/motd to avoid confusion.
  echo -n "" > /etc/motd

  # Decide where is the $LIVE_MEDIA
  get_live_media_mnt_point

  # Try to force to remount /$LIVE_MEDIA as rw, since it's rw device, like USB disk, we can try to save clonezilla image.
  mount -o remount,rw /$LIVE_MEDIA

  # TODO: we probably shouldn't tie this to a specific UUID...
  mount /dev/disk/by-uuid/0ab36392-aa24-4574-a470-128844c76bfe /mnt
  mount -o bind /mnt/partimag /home/partimag
  
  # Prepare default ocsroot.
  if mkdir -p /$LIVE_MEDIA/$ocsroot 2>/dev/null; then
    # If /$LIVE_MEDIA is writable, default to make $ocsroot link to /$LIVE_MEDIA/$ocsroot. This link file will be removed by prep-ocsroot if it need the mount point $ocsroot (dir).
    # Remove the stale mountpoint if it's empty. This will avoid link twice: 
    # If we run this later:
    # ln -fs /live_media/home/partimag /home/partimag
    # if the latter dir /home/partimag exists then link will create something like:
    # ls -l /home/partimag/
    # lrwxrwxrwx 1 root root 26 2007-12-13 23:29 partimag -> /live_media//home/partimag
    # If we embedded the image in Clonezilla live, /$LIVE_MEDIA/$ocsroot will exist, so if we run "mkdir -p /$LIVE_MEDIA/$ocsroot", it will succeed, and this is what we want, too. Since later we will link /$LIVE_MEDIA/$ocsroot to $ocsroot.
    [ -d "$ocsroot" -a -z "$(unalias ls &>/dev/null; ls $ocsroot/ 2>/dev/null)" ] && rmdir $ocsroot 
    [ -L "$ocsroot" ] && rm -f $ocsroot 
    mkdir -p "$(dirname $ocsroot)"
    ln -fs /$LIVE_MEDIA/$ocsroot $ocsroot
  else
    # mkdir a mount point to be used later if it does not exist. Normally it will be created in /etc/ocs/ocs-live.d/S03prep-drbl-clonezilla, so here it's just a insurance.
    [ ! -d "$ocsroot" ] && mkdir -p $ocsroot
  fi
  
  ask_language_if_supported_with_bterm
  [ -z "$ocs_lang" ] && ocs_lang=en
  ask_and_load_lang_set $ocs_lang

  DIA="whiptail"
  
  # run the main program
  [ "$ocs_live_batch" = "no" ] && choose_mode
}

##################
###### MAIN ######
##################

prepare
choose_save_restore

case "$ocs_sr_type" in
  "savedisk")
    ocs-sr -p true -b -sc -g auto -e1 auto -e2 -r -j2 -q2 savedisk "ask_user" "ask_user"
    ;;
  "1-2-mdisks")
    # To get $target_hd
    ocs_mode_prompt="1-2-mdisks"
    get_target_hd_name_from_local_machine "$msg_choose_the_disks_to_restore \n$msg_linux_disk_naming $msg_press_space_to_mark_selection" checklist
    good_disks=""
    for disk in $target_hd; do
      if /mnt/root/partition /dev/$disk; then
	good_disks="$good_disks $disk";
      else
	echo "$disk is unsuitable. Ignoring"
	sleep 10
      fi
    done
    ocs-restore-mdisks -b -p "-c -p true -k -g auto -e1 auto -e2 -r -j2" "ask_user" "$good_disks"
    ;;
  *)
    exit 2
    ;;
esac


